{"version":3,"file":"static/js/221.93cbe7de.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Container/Container.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","utils/HandleMouse.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/Form.styled.jsx","components/Modal/Modal.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","components/Container/Container.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectOperation = state => state.contacts.operation;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter], (contacts, filter) => {        \n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n);","import styled from \"styled-components\";\n\nexport const ContainerStyled = styled.section`\n    min-height: 90vh;\n    border: 3px solid black;\n    border-top: none;\n\n    background-color: #6a6767;\n    color: #ffffff;\n\n    \n`;\n\nexport const ContactsNumber = styled.div`\n    padding: ${p => p.theme.space[2]}px;    \n    text-align: right;    \n    border-bottom: 3px solid #bdb8b8;\n\n`;\n\nexport const BoxFilterFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    border-bottom: 3px solid #bdb8b8;\n    justify-content: space-between;\n    \n`;","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\n    width: 85%;\n\n    p {\n        margin-bottom: ${p => p.theme.space[2]}px;\n        font-size: ${p => p.theme.fontSizes[3]}px;\n        font-weight: ${p => p.theme.fontWeights.middle};\n    }\n\n    input {\n        width: 93%;\n        height: 24px;\n        padding-left: 24px;\n        padding-right: 8px;\n        border-radius: 5px;\n        border: 1px solid #bdbdbd;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23212529' viewBox='0 0 16 16'%3E%3Cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'%3E%3C/path%3E%3C/svg%3E\");\n        background-repeat: no-repeat;\n        background-position: 0.7% 50%;\n\n        :focus {\n            color: #212529;\n            background-color: #fff;\n            border-color: #bdbdbd;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(213, 212, 212, 0.25);\n        }\n    }\n`;","import { FilterStyled } from \"components/Filter/Filter.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterSet } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const handleChange = e => {\n        const { value } = e.target;        \n        dispatch(filterSet(value));        \n    };\n\n    return (\n        <FilterStyled>                \n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={handleChange}\n                placeholder=\"Search contact\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"              \n            />     \n            \n        </FilterStyled>\n        );\n}","import styled from \"styled-components\";\n\nexport const ContactListStyled = styled.ul`\n    list-style: none;\n    margin: 0;\n    padding: 0;   \n`;","import styled from \"styled-components\";\n\nexport const ContactItemStyled = styled.li`\n    border-bottom: 1px solid #bdb8b8;\n    display: flex;\n\n    div {\n        width: 100%;\n    }\n\n    p {\n        margin-top: 8px;\n        margin-bottom: 8px;\n        margin-left: 16px;\n        margin-right: 16px;\n    }\n`;\n\n\nexport const PhoneButton = styled.button`\n    margin: 0;\n    padding: 10px;\n    border: none;\n    border-right: 1px solid #bdb8b8;\n    width: 60px;\n    height: 60px;\n    background-color: #4f5152;\n    cursor: pointer;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;       \n    }\n`;\n\nexport const SettingsButton = styled.button`\n    margin: 0;\n    padding: 10px;\n    border: none;\n    border-left: 1px solid #bdb8b8;\n    width: 60px;\n    height: 60px;\n    background-color: #4f5152;\n    cursor: pointer;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;       \n    }\n`;\n\nexport const DeleteButton = styled.button`\n    margin: 0;\n    padding: 10px;\n    border: none;\n    border-left: 1px solid #bdb8b8;\n    width: 60px;\n    height: 60px;\n    background-color: #524f50;\n    cursor: pointer;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;       \n    }\n`;","export const handleMouseDown = e => {\n    e.currentTarget.style.backgroundColor = \"#b43d4f\";\n}\n\nexport const handleMouseUp = e => {\n    e.currentTarget.style.backgroundColor = \"#524f50\";\n}","import PropTypes from 'prop-types';\nimport GridLoader from \"react-spinners/GridLoader\";\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio';\nimport { AiFillPhone, AiFillDelete, AiFillSetting } from \"react-icons/ai\";\nimport { BsFillPersonBadgeFill, BsFillPhoneFill } from \"react-icons/bs\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectOperation } from 'redux/contacts/selectors';\nimport { ContactItemStyled, PhoneButton, SettingsButton, DeleteButton } from \"components/ContactItem/ContactItem.styled\";\nimport { handleMouseDown, handleMouseUp } from \"../../utils/HandleMouse\";\n\n\nexport const ContactItem = ({ id, name, number, openModal }) => {\n    const dispatch = useDispatch();\n    const operation = useSelector(selectOperation);\n\n    function onDeleteContact(id) {        \n        dispatch(deleteContact(id));       \n    };\n\n    return (\n        <ContactItemStyled >\n            <PhoneButton\n                type='button'\n                onClick={() => Confirm.show(\n                    'Outcoming call',\n                    `call to: ${name.toUpperCase()} on: ${number} ??`,\n                    'Okay',\n                    'No',\n                    () => { },\n                    () => { },\n                )} >\n                <AiFillPhone size={40} color=\"#70eb4a\" /></PhoneButton>\n            \n            <div>\n                <p><BsFillPersonBadgeFill /> {name}</p>\n                <p><BsFillPhoneFill /> {number}</p>\n            </div>\n\n            <SettingsButton\n                type='button'\n                onClick={() => openModal({ id: id, data: { name: name, number: number } })} >\n                <AiFillSetting size={40} color=\"#2e312d\" />\n            </SettingsButton>\n\n            <DeleteButton type='button'\n                onClick={() => onDeleteContact(id)}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp} >\n                    {operation === id ? <GridLoader size={8.9} color='#3d0404' /> : <AiFillDelete size={40} color=\"#3d0404\" />}\n            </DeleteButton>            \n        </ContactItemStyled>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    openModal: PropTypes.func.isRequired,\n}","import PropTypes from 'prop-types';\nimport { ContactListStyled } from \"components/ContactList/ContactList.styled\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\n\nexport const ContactList = ({ openModal }) => {\n    const contacts = useSelector(selectFilteredContacts);    \n\n    return (\n        <ContactListStyled>\n            {contacts.map(({ id, name, number }) => {\n                return <ContactItem key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                    openModal={openModal}\n                />;\n            })}\n        </ContactListStyled>\n    );\n};\n\nContactList.propTypes = {\n    openModal: PropTypes.func.isRequired,\n}","import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    \n    padding: ${p => p.theme.space[4]}px ${p => p.theme.space[4]}px;\n    border: 1px solid black;\n    height: 240px;\n    width: 260px;\n    border-radius: ${p => p.theme.radii[0]}px;\n    background-color: #6a6767;\n    color: #ffffff;\n\n    label {\n        display: block;\n        height: 48px;\n        /* margin-bottom: ${p => p.theme.space[3]}px;  */\n        padding-bottom: ${p => p.theme.space[4]}px;       \n    }\n\n    input {\n        display: block;\n        width: 100%;\n        margin-top: 8px;    \n        border-radius: 5px;\n        border: 1px solid #bdbdbd;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;        \n\n        :focus {\n            color: #212529;\n            background-color: #fff;\n            border-color: #bdbdbd;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(213, 212, 212, 0.25);\n        }\n        \n    }\n\n    span {        \n        color: ${p => p.theme.colors.red};\n    }\n\n    button {\n        margin-top: ${p => p.theme.space[4]}px;        \n        width: 150px;\n        height: 50px;\n        border-radius: ${p => p.theme.radii[0]}px;\n        cursor: pointer;\n        margin-left: auto;\n        margin-right: auto;\n        color: #c7c6c6;\n        border: 1px solid #5b5b5e;        \n    \n        background-color: #4f5152;\n\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        :hover,\n        :focus {\n            background-color: #6b6b71;\n            color: #ffffff;\n        }\n    }\n\n`;\n\nexport const ButtonOpenStyled = styled.button`\n    \n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 60px;\n    height: 60px;\n    color: #c7c6c6;\n    border: 1px solid #5b5b5e;\n    font-size: 64px;\n    \n    background-color: #4f5152;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;\n        color: #ffffff;\n    }\n`;","import styled from \"styled-components\";\n\nexport const ModalStyled = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n\n    .div {\n        position: relative;\n        max-width: calc(100vw - 48px);\n        max-height: calc(100vh - 24px);\n    }  \n\n`;\n\nexport const ButtonCloseStyled = styled.button`\n    position: absolute;\n    top: calc(50% - 150px);\n    right: calc(50% - 154px);\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: ${p => p.theme.space[4]}px;\n    height: ${p => p.theme.space[4]}px;\n    color: #000000;\n    border: 1px solid #5b5b5e;\n    font-size: 64px;\n    \n    background-color: #969899;\n    border-radius: ${p => p.theme.radii[1]}%;\n    /* border: none; */\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;\n        color: #ffffff;\n    }\n`;","import PropTypes from 'prop-types';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport { FormStyled } from \"components/ContactForm/Form.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectError, selectOperation } from 'redux/contacts/selectors';\nimport { addContact, changeContact } from 'redux/contacts/operations';\nimport { useState } from 'react';\n\n\nexport const ContactForm = ({ contactData }) => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);    \n    const operation = useSelector(selectOperation);\n    const error = useSelector(selectError);\n    const [values, setValues] = useState(() => ({    \n        name: contactData.data.name,\n        number: contactData.data.number,\n    }));\n    \n    \n    const handleSubmit = (values, { resetForm }) => {\n        const { name } = values;\n\n        if (!contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n            if (!contactData.id) {\n                dispatch(addContact(values));\n                !error && resetForm();\n            } else {\n                dispatch(changeContact({ id: contactData.id, data: values }));\n                setValues({\n                    name: \"\",\n                    number: \"\",\n                });               \n            }    \n                      \n        } else {\n            alert(`${name} is already in contacts`);\n        }        \n    } \n\n    return (\n            <Formik initialValues={values} onSubmit={handleSubmit} validationSchema={PhonebookValidationSchema}>\n                <FormStyled>\n                    <label>\n                        Name\n                        <Field\n                        type=\"text\"\n                        name=\"name\"                        \n                        />\n                        <ErrorMessage name=\"name\" component=\"span\" />\n                    </label>\n\n                    <label>\n                        Number\n                        <Field\n                        type=\"tel\"\n                        name=\"number\"                        \n                        />\n                        <ErrorMessage name=\"number\" component=\"span\" />\n                    </label>\n                    \n                    {contactData.id ?\n                        <button type=\"submit\" >{operation === \"change\" ? <ScaleLoader color=\"#ffffff\" height={25} /> : <>Change contact</>} </button> :\n                        <button type=\"submit\" >{operation === \"add\" ? <ScaleLoader color=\"#ffffff\" height={25} /> : <>Add contact</> } </button> }\n                </FormStyled>\n            </Formik>\n            \n        )\n    }\n\n\nContactForm.propTypes = {\n    contactData: PropTypes.object.isRequired,\n}\n\n\n// const values = {    \n//         name: \"\",\n//         number: \"\",\n//     }\n\nconst namePattern = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phonePattern = \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\"\nconst PhonebookValidationSchema = Yup.object().shape({\n    name: Yup.string()\n        .matches(namePattern, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .min(2, 'Too Short!')\n        .max(70, 'Too Long!')\n        .required('Required'),\n    number: Yup.string()\n        .matches(phonePattern, \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\")    \n        .required('Required'),\n});","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport PropTypes from 'prop-types';\n\nimport { ModalStyled, ButtonCloseStyled } from \"./Modal.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\n\n\n\nconst modalRoot = document.querySelector('#modal-root')\n\n\nexport class Modal extends Component {\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === \"Escape\") {\n            this.props.onClose();\n        }\n    }\n\n    handleBackDropClick = e => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    }\n    \n\n    render() {\n\n        return createPortal(\n            <ModalStyled onClick={this.handleBackDropClick}>\n                <div>\n                    <ButtonCloseStyled type=\"button\" onClick={() => this.props.onClose()}>\n                        <AiOutlineClose size={20}/>\n                    </ButtonCloseStyled>                    \n                    <ContactForm contactData={this.props.contactData} />\n                </div>                \n            </ModalStyled>,\n            modalRoot\n        );\n    }\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    contactData: PropTypes.object.isRequired,\n}","import FadeLoader from \"react-spinners/FadeLoader\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectError, selectFilteredContacts, selectOperation } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nimport { ContainerStyled, ContactsNumber, BoxFilterFormButton } from \"components/Container/Container.styled\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { ButtonOpenStyled } from \"components/ContactForm/Form.styled\";\nimport { Modal } from \"components/Modal/Modal\";\n\n\nconst Container = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n    const operation = useSelector(selectOperation);\n    const error = useSelector(selectError);\n    const [ismodalOpen, setIsmodalOpen] = useState(false);\n    const [changingData, setChangingData] = useState({id: null, data: {name: \"\", number: \"\"}});\n    \n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const openChangingModal = contactData => {\n        setIsmodalOpen(true);\n        setChangingData(contactData);        \n    }\n\n    const closeModal = () => {\n        setIsmodalOpen(false);\n        setChangingData({ id: null, data: { name: \"\", number: \"\" } });        \n    }\n\n    return (\n        <ContainerStyled>\n            <ContactsNumber>contacts: {contacts.length}</ContactsNumber>\n            {ismodalOpen && <Modal\n                onClose={closeModal}                \n                contactData={changingData} />}\n            <BoxFilterFormButton>\n                <Filter />\n                <ButtonOpenStyled type=\"button\" onClick={() => setIsmodalOpen(true)} >+</ButtonOpenStyled>\n            </BoxFilterFormButton> \n            \n            {operation === \"fetch\" && !error ? <FadeLoader /> : <ContactList openModal={openChangingModal} /> }\n        \n        </ContainerStyled>);\n}\n\n\nexport default Container;"],"names":["selectContacts","state","contacts","selectError","error","selectOperation","operation","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContainerStyled","styled","ContactsNumber","p","theme","space","BoxFilterFormButton","FilterStyled","fontSizes","fontWeights","middle","Filter","dispatch","useDispatch","useSelector","type","value","onChange","e","target","filterSet","placeholder","pattern","title","ContactListStyled","ContactItemStyled","PhoneButton","SettingsButton","DeleteButton","handleMouseDown","currentTarget","style","backgroundColor","handleMouseUp","ContactItem","id","number","openModal","onClick","Confirm","toUpperCase","size","color","data","deleteContact","onDeleteContact","onMouseDown","onMouseUp","ContactList","map","FormStyled","Form","radii","colors","red","ButtonOpenStyled","ModalStyled","ButtonCloseStyled","ContactForm","contactData","useState","values","setValues","initialValues","onSubmit","resetForm","some","alert","changeContact","addContact","validationSchema","PhonebookValidationSchema","component","height","Yup","shape","matches","min","max","required","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackDropClick","window","addEventListener","this","removeEventListener","createPortal","Component","ismodalOpen","setIsmodalOpen","changingData","setChangingData","useEffect","fetchContacts","length"],"sourceRoot":""}