{"version":3,"file":"static/js/393.9c74e493.chunk.js","mappings":"0OAwDMA,EAAS,CACXC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGRC,EAAyBC,EAAAA,KAAaC,MAAM,CAC9CL,KAAMI,EAAAA,KACDE,QAHW,yHAGU,0IACrBC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdR,MAAOG,EAAAA,KAAaH,QAAQQ,SAAS,YACrCP,SAAUE,EAAAA,KAAaK,SAAS,cAGpC,UA9De,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAgBC,EAAAA,EAAAA,IAAYC,EAAAA,IAgBlC,OACI,SAAC,KAAD,CAAQC,cAAehB,EAAQiB,SAfd,SAACjB,EAAD,GAA4B,IAAjBkB,EAAgB,EAAhBA,UAE5BP,GAASQ,EAAAA,EAAAA,IAASnB,IAClBkB,GACH,EAW0DE,iBAAkBhB,EAAzE,UACI,UAAC,IAAD,YACI,qCAEI,SAAC,KAAD,CAAOiB,KAAK,OAAOpB,KAAK,OAAOqB,YAAY,qBAC3C,SAAC,KAAD,CAAcrB,KAAK,OAAOsB,UAAU,aAGxC,sCAEI,SAAC,KAAD,CAAOF,KAAK,QAAQpB,KAAK,QAAQqB,YAAY,sBAC7C,SAAC,KAAD,CAAcrB,KAAK,QAAQsB,UAAU,aAGzC,yCAEI,SAAC,KAAD,CAAOF,KAAK,WAAWpB,KAAK,WAAWqB,YAAY,yBACnD,SAAC,KAAD,CAAcrB,KAAK,WAAWsB,UAAU,aAG5C,oBAAQF,KAAK,SAAb,cAA0BR,GAA8D,2CAA9C,SAAC,IAAD,CAAaW,MAAM,UAAUC,OAAQ,KAA/E,WAIf,C,0FClDYC,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,w8CAqCZ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,GAAnB,IAII,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAGE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAM,EAAlB,G","sources":["components/SignUp/SignUp.jsx","components/SignUp/SignUp.styled.jsx"],"sourcesContent":["import { Field, Formik, ErrorMessage } from \"formik\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as Yup from \"yup\";\nimport { register } from \"redux/auth/operations\";\nimport { selectIsAuthLoading } from \"redux/auth/selectors\";\nimport { SignUpFormStyled } from \"./SignUp.styled\";\n\n\n\nconst SignUp = () => {\n    const dispatch = useDispatch();\n    const isAuthLoading = useSelector(selectIsAuthLoading);\n\n    const handleSubmit = (values, { resetForm }) => {        \n        // console.log(values);\n        dispatch(register(values));\n        resetForm();\n    }\n\n//     {\n//   \"name\": \"Adriansssssss Cross\",\n//   \"email\": \"acrosssssss@mail.com\",\n//   \"password\": \"examplepwd12345\"\n// }\n    // {name: 'Rosie Simpson', email: 'dsfbfg@gmail.com', password: '123456йцукен'}\n\n\n    return (\n        <Formik initialValues={values} onSubmit={handleSubmit} validationSchema={SignUpValidationSchema} >\n            <SignUpFormStyled>\n                <label>\n                    Name\n                    <Field type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n                    <ErrorMessage name=\"name\" component=\"span\" />\n                </label>\n\n                <label>\n                    Email\n                    <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n                    <ErrorMessage name=\"email\" component=\"span\" />\n                </label>\n\n                <label>\n                    Password\n                    <Field type=\"password\" name=\"password\" placeholder=\"Enter your password\" />\n                    <ErrorMessage name=\"password\" component=\"span\" />\n                </label>\n\n                <button type=\"submit\"> { !isAuthLoading ? <ScaleLoader color=\"#ffffff\" height={25} /> : <>Sign Up</> } </button>\n            </SignUpFormStyled>\n        </Formik>        \n    )\n}\n\n\nconst values = {    \n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\nconst namePattern = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst SignUpValidationSchema = Yup.object().shape({\n    name: Yup.string()\n        .matches(namePattern, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .min(2, 'Too Short!')\n        .max(70, 'Too Long!')\n        .required('Required'),\n    email: Yup.string().email().required('Required'),\n    password: Yup.string().required('Required'),\n});\n\nexport default SignUp;","import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const SignUpFormStyled = styled(Form)`\n\n    padding: 32px;\n    height: 80vh;\n\n    color: #ffffff;\n    background-color: #6a6767;\n    background-image: url(https://cdn-icons-png.flaticon.com/512/2448/2448997.png);\n    background-repeat: no-repeat;\n\n    label {\n        display: block;\n        height: 48px;        \n        padding-bottom: 48px;       \n    }\n\n    input {\n        display: block;\n        margin-top: 8px;\n        \n        padding: 0 16px;\n        width: 250px;\n        height: 24px;        \n        border-radius: 5px;\n        border: 1px solid #bdbdbd;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n        :focus {\n            color: #212529;\n            background-color: #fff;\n            border-color: #bdbdbd;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(213, 212, 212, 0.25);\n        }\n    }    \n\n    span {        \n        color: ${p => p.theme.colors.red};\n    }\n\n    button {\n        margin-top: ${p => p.theme.space[4]}px;        \n        width: 150px;\n        height: 50px;\n        border-radius: ${p => p.theme.radii[0]}px;\n        cursor: pointer;\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 24px;\n        color: #ffffff;\n        border: 1px solid #5b5b5e;        \n    \n        background-color: #4f5152;\n\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        :hover,\n        :focus {\n            background-color: #6b6b71;\n            color: #ffffff;\n        }\n    }\n`;"],"names":["values","name","email","password","SignUpValidationSchema","Yup","shape","matches","min","max","required","dispatch","useDispatch","isAuthLoading","useSelector","selectIsAuthLoading","initialValues","onSubmit","resetForm","register","validationSchema","type","placeholder","component","color","height","SignUpFormStyled","styled","Form","p","theme","colors","red","space","radii"],"sourceRoot":""}