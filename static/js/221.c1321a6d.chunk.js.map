{"version":3,"file":"static/js/221.c1321a6d.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Container/Container.styled.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","utils/HandleMouse.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/ContactForm/Form.styled.jsx","components/Modal/Modal.styled.jsx","components/ContactForm/ContactForm.jsx","components/Modal/Modal.jsx","components/Container/Container.jsx"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectOperation = state => state.contacts.operation;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n    [selectContacts, selectFilter], (contacts, filter) => {        \n        return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n);","import styled from \"styled-components\";\n\nexport const ContainerStyled = styled.section`\n    height: 100vh;\n    border: 3px solid black;\n    border-top: none;\n    /* padding-top : ${p => p.theme.space[3]}px; */\n    /* padding-left: ${p => p.theme.space[3]}px;\n    padding-right: ${p => p.theme.space[3]}px; */\n    /* padding-bottom: ${p => p.theme.space[5]}px; */\n\n    background-color: #6a6767;\n    color: #ffffff;\n\n    \n`;\n\nexport const ContactsNumber = styled.div`\n    padding: ${p => p.theme.space[2]}px;    \n    text-align: right;    \n    border-bottom: 1px solid #bdb8b8;\n\n`;\n\nexport const BoxFilterFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    padding-left: 16px;\n    border-bottom: 1px solid #bdb8b8;\n    justify-content: space-between;\n    \n`;","import styled from \"styled-components\";\n\nexport const FilterStyled = styled.div`\n    width: 85%;\n\n    p {\n        margin-bottom: ${p => p.theme.space[2]}px;\n        font-size: ${p => p.theme.fontSizes[3]}px;\n        font-weight: ${p => p.theme.fontWeights.middle};\n    }\n\n    input {\n        width: 93%;\n        height: 24px;\n        padding-left: 24px;\n        padding-right: 8px;\n        border-radius: 5px;\n        border: 1px solid #bdbdbd;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n        background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23212529' viewBox='0 0 16 16'%3E%3Cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'%3E%3C/path%3E%3C/svg%3E\");\n        background-repeat: no-repeat;\n        background-position: 0.7% 50%;\n\n        :focus {\n            color: #212529;\n            background-color: #fff;\n            border-color: #bdbdbd;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(213, 212, 212, 0.25);\n        }\n    }\n`;","import { FilterStyled } from \"components/Filter/Filter.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { filterSet } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    const handleChange = e => {\n        const { value } = e.target;\n        console.log(value);\n        dispatch(filterSet(value));        \n    };\n\n    return (\n        <FilterStyled>                \n            <input\n                type=\"text\"\n                name=\"filter\"\n                value={filter}\n                onChange={handleChange}\n                placeholder=\"Search contact\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"              \n            />     \n            \n        </FilterStyled>\n        );\n}","import styled from \"styled-components\";\n\nexport const ContactListStyled = styled.ul`\n    li:not(:last-child) {\n        margin-bottom: ${p => p.theme.space[2]}px;\n    }\n`;","import styled from \"styled-components\";\n\nexport const ContactItemStyled = styled.li`\n    button {\n        margin-left: ${p => p.theme.space[3]}px;\n        border-radius: ${p => p.theme.radii[0]}px;\n        cursor: pointer;\n    }\n`;","export const handleMouseDown = e => {\n    e.currentTarget.style.backgroundColor = \"#00bbff\";\n}\n\nexport const handleMouseUp = e => {\n    e.currentTarget.style.backgroundColor = \"#e0e0e0\";\n}","import PropTypes from 'prop-types';\nimport { ContactItemStyled } from \"components/ContactItem/ContactItem.styled\";\nimport { handleMouseDown, handleMouseUp } from \"../../utils/HandleMouse\";\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n\n    function onDeleteContact(id) {        \n        dispatch(deleteContact(id));       \n    };\n\n    return (\n        <ContactItemStyled >\n            {name}: {number}\n            <button type=\"button\"\n                onClick={() => onDeleteContact(id)}\n                onMouseDown={handleMouseDown}\n                onMouseUp={handleMouseUp}\n            >\n                Delete\n            </button>\n        </ContactItemStyled>\n    );\n};\n\nContactItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,    \n}","// import PropTypes from 'prop-types';\nimport { ContactListStyled } from \"components/ContactList/ContactList.styled\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectFilteredContacts);\n\n    return (\n        <ContactListStyled>\n            {contacts.map(({ id, name, number }) => {\n                return <ContactItem key={id}\n                    id={id}\n                    name={name}\n                    number={number}\n                />;\n            })}\n        </ContactListStyled>\n    );\n};\n\n// ContactList.propTypes = {\n//     contacts: PropTypes.arrayOf(\n//         PropTypes.shape({\n//             id: PropTypes.string.isRequired,\n//             name: PropTypes.string.isRequired,\n//             number: PropTypes.string.isRequired,\n//         })),\n// };","import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const FormStyled = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    padding: ${p => p.theme.space[4]}px ${p => p.theme.space[3]}px;\n    border: 1px solid black;\n    height: 240px;\n    width: 280px;\n    border-radius: ${p => p.theme.radii[0]}px;\n    background-color: #6a6767;\n    color: #ffffff;\n\n    label {\n        display: block;\n        height: 48px;\n        /* margin-bottom: ${p => p.theme.space[3]}px;  */\n        padding-bottom: ${p => p.theme.space[4]}px;       \n        \n    }\n\n    input {\n        display: block;\n        width: 200px;\n        border-radius: 5px;\n        \n    }\n\n    span {\n        color: ${p => p.theme.colors.red};\n    }\n\n    button {\n        margin-top: ${p => p.theme.space[4]}px;\n        padding: 16px;\n        border-radius: ${p => p.theme.radii[0]}px;\n        cursor: pointer;\n        margin-left: auto;\n        margin-right: auto;\n        color: #c7c6c6;\n        border: 1px solid #5b5b5e;        \n    \n        background-color: #4f5152;\n\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        :hover,\n        :focus {\n            background-color: #6b6b71;\n            color: #ffffff;\n        }\n    }\n\n`;\n\nexport const ButtonOpenStyled = styled.button`\n    \n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: 60px;\n    height: 60px;\n    color: #c7c6c6;\n    border: 1px solid #5b5b5e;\n    font-size: 64px;\n    \n    background-color: #4f5152;\n\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;\n        color: #ffffff;\n    }\n`;","import styled from \"styled-components\";\n\nexport const ModalStyled = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n\n    .div {\n        position: relative;\n        max-width: calc(100vw - 48px);\n        max-height: calc(100vh - 24px);\n    }  \n\n`;\n\nexport const ButtonCloseStyled = styled.button`\n    position: absolute;\n    top: calc(50% - 150px);\n    right: calc(50% - 154px);\n    margin: 0;\n    padding: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    width: ${p => p.theme.space[4]}px;\n    height: ${p => p.theme.space[4]}px;\n    color: #000000;\n    border: 1px solid #5b5b5e;\n    font-size: 64px;\n    \n    background-color: #969899;\n    border-radius: ${p => p.theme.radii[1]}%;\n    /* border: none; */\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover,\n    :focus {\n        background-color: #6b6b71;\n        color: #ffffff;\n    }\n`;","// import PropTypes from 'prop-types';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport * as Yup from \"yup\";\nimport { FormStyled } from \"components/ContactForm/Form.styled\";\nimport { handleMouseDown, handleMouseUp } from \"../../utils/HandleMouse\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectContacts, selectError, selectOperation } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\n\nconst values = {    \n        name: \"\",\n        number: \"\",\n    }\n\nconst namePattern = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst phonePattern = \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\"\nconst PhonebookValidationSchema = Yup.object().shape({\n    name: Yup.string()\n        .matches(namePattern, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .min(2, 'Too Short!')\n        .max(70, 'Too Long!')\n        .required('Required'),\n    number: Yup.string()\n        .matches(phonePattern, \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\")    \n        .required('Required'),\n});\n\n\nexport const ContactForm = () => {\n\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);    \n    const operation = useSelector(selectOperation);\n    const error = useSelector(selectError);    \n\n    console.log(operation);\n    \n\n    const handleSubmit = (values, { resetForm }) => {\n        const { name } = values;\n\n        if (!contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {            \n            dispatch(addContact(values));         \n            !error && resetForm();          \n        } else {\n            alert(`${name} is already in contacts`);\n        }        \n    } \n\n    return (\n            <Formik initialValues={values} onSubmit={handleSubmit} validationSchema={PhonebookValidationSchema}>\n                <FormStyled>\n                    <label>\n                        Name\n                        <Field\n                        type=\"text\"\n                        name=\"name\" \n                        />\n                        <ErrorMessage name=\"name\" component=\"span\" />\n                    </label>\n\n                    <label>\n                        Number\n                        <Field\n                        type=\"tel\"\n                        name=\"number\"\n                        />\n                        <ErrorMessage name=\"number\" component=\"span\" />\n                    </label>\n\n                    <button type=\"submit\" onMouseDown={handleMouseDown} onMouseUp={handleMouseUp}>Add contact</button>\n                </FormStyled>\n            </Formik>\n            \n        )\n    }\n\n\n// ContactForm.propTypes = {\n//     onSubmit: PropTypes.func.isRequired,\n// }","import { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from 'prop-types';\nimport { ModalStyled, ButtonCloseStyled } from \"./Modal.styled\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\n\nimport { AiOutlineClose } from \"react-icons/ai\";\n\nconst modalRoot = document.querySelector('#modal-root')\n\n\nexport class Modal extends Component {\n\n    componentDidMount() {\n        window.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = e => {\n        if (e.code === \"Escape\") {\n            this.props.onClose();\n        }\n    }\n\n    handleBackDropClick = e => {\n        if (e.currentTarget === e.target) {\n            this.props.onClose();\n        }\n    }\n    \n\n    render() {\n\n        return createPortal(\n            <ModalStyled onClick={this.handleBackDropClick}>\n                <div>\n                    <ButtonCloseStyled type=\"button\" onClick={() => this.props.onClose()}>\n                        <AiOutlineClose size={16}/>\n                    </ButtonCloseStyled>\n                    <ContactForm />                    \n                </div>                \n            </ModalStyled>,\n            modalRoot\n        );\n    }\n}\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n}","// import PropTypes from 'prop-types';\n\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/contacts/selectors\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nimport { ContainerStyled, ContactsNumber, BoxFilterFormButton } from \"components/Container/Container.styled\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { ButtonOpenStyled } from \"components/ContactForm/Form.styled\";\nimport { Modal } from \"components/Modal/Modal\";\nimport { useState } from \"react\";\n\n\nconst Container = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n    const [ismodalOpen, setIsmodalOpen] = useState(false);\n    \n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const closeModal = () => {\n      setIsmodalOpen(false);\n    }\n    \n\n    // const formSubmitHandler = data => {\n    //     const { name } = data;\n        \n    //     if (!contacts.some(contact => contact.name.toLowerCase() === name.toLowerCase())) {\n    //     dispatch(addContact(data));      \n    //     } else {\n    //     alert(`${name} is already in contacts`);\n    //     } \n    // }\n\n    return (\n        <ContainerStyled>\n            <ContactsNumber>contacts: {contacts.length}</ContactsNumber>\n            {ismodalOpen && <Modal onClose={closeModal}/>}\n            <BoxFilterFormButton>\n                <Filter />\n                <ButtonOpenStyled type=\"button\" onClick={() => setIsmodalOpen(true)} >+</ButtonOpenStyled>\n            </BoxFilterFormButton>\n            \n\n            {/* <ContactForm onSubmit={formSubmitHandler} />        */}\n\n            \n\n            \n            <ContactList\n                // contacts={contacts}\n            />\n        \n        </ContainerStyled>);\n}\n\n\nexport default Container;"],"names":["selectContacts","state","contacts","selectError","error","selectOperation","operation","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContainerStyled","styled","p","theme","space","ContactsNumber","BoxFilterFormButton","FilterStyled","fontSizes","fontWeights","middle","Filter","dispatch","useDispatch","useSelector","type","value","onChange","e","target","console","log","filterSet","placeholder","pattern","title","ContactListStyled","ContactItemStyled","radii","handleMouseDown","currentTarget","style","backgroundColor","handleMouseUp","ContactItem","id","number","onClick","deleteContact","onDeleteContact","onMouseDown","onMouseUp","ContactList","map","FormStyled","Form","colors","red","ButtonOpenStyled","ModalStyled","ButtonCloseStyled","values","PhonebookValidationSchema","Yup","shape","matches","min","max","required","ContactForm","initialValues","onSubmit","resetForm","some","alert","addContact","validationSchema","component","modalRoot","document","querySelector","Modal","handleKeyDown","code","props","onClose","handleBackDropClick","window","addEventListener","this","removeEventListener","createPortal","size","Component","useState","ismodalOpen","setIsmodalOpen","useEffect","fetchContacts","length"],"sourceRoot":""}