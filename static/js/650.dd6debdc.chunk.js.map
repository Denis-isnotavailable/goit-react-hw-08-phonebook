{"version":3,"file":"static/js/650.dd6debdc.chunk.js","mappings":"2OAGaA,GAAmBC,E,QAAAA,IAAOC,EAAAA,GAAPD,CAAH,uE,SCiDvBE,EAAS,CACXC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGRC,EAAyBC,EAAAA,KAAaC,MAAM,CAC9CL,KAAMI,EAAAA,KACDE,QAHW,yHAGU,0IACrBC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACdR,MAAOG,EAAAA,KAAaH,QAAQQ,SAAS,YACrCP,SAAUE,EAAAA,KAAaK,SAAS,cAGpC,EA7De,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MAgBjB,OACI,SAAC,KAAD,CAAQC,cAAeb,EAAQc,SAfd,SAACd,EAAD,GAA4B,IAAjBe,EAAgB,EAAhBA,UAC5BC,QAAQC,IAAIjB,GACZW,GAASO,EAAAA,EAAAA,IAASlB,IAClBe,GACH,EAW0DI,iBAAkBf,EAAzE,UACI,UAACP,EAAD,YACI,qCAEI,SAAC,KAAD,CAAOuB,KAAK,OAAOnB,KAAK,OAAOoB,YAAY,qBAC3C,SAAC,KAAD,CAAcpB,KAAK,OAAOqB,UAAU,aAGxC,sCAEI,SAAC,KAAD,CAAOF,KAAK,QAAQnB,KAAK,QAAQoB,YAAY,sBAC7C,SAAC,KAAD,CAAcpB,KAAK,QAAQqB,UAAU,aAGzC,yCAEI,SAAC,KAAD,CAAOF,KAAK,WAAWnB,KAAK,WAAWoB,YAAY,yBACnD,SAAC,KAAD,CAAcpB,KAAK,WAAWqB,UAAU,aAG5C,mBAAQF,KAAK,SAAb,yBAIf,C","sources":["components/SignUp/SignUp.styled.jsx","components/SignUp/SignUp.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const SignUpFormStyled = styled(Form)`\n\n    input {\n        display: block;\n    }\n`;","import { Field, Formik, ErrorMessage } from \"formik\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"redux/auth/operations\";\nimport * as Yup from \"yup\";\nimport { SignUpFormStyled } from \"./SignUp.styled\";\n\n\nconst SignUp = () => {\n    const dispatch = useDispatch();     \n\n    const handleSubmit = (values, { resetForm }) => {        \n        console.log(values);\n        dispatch(register(values));\n        resetForm();\n    }\n\n//     {\n//   \"name\": \"Adriansssssss Cross\",\n//   \"email\": \"acrosssssss@mail.com\",\n//   \"password\": \"examplepwd12345\"\n// }\n    // {name: 'Rosie Simpson', email: 'dsfbfg@gmail.com', password: '123456йцукен'}\n\n\n    return (\n        <Formik initialValues={values} onSubmit={handleSubmit} validationSchema={SignUpValidationSchema} >\n            <SignUpFormStyled>\n                <label>\n                    Name\n                    <Field type=\"text\" name=\"name\" placeholder=\"Enter your name\" />\n                    <ErrorMessage name=\"name\" component=\"span\" />\n                </label>\n\n                <label>\n                    Email\n                    <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n                    <ErrorMessage name=\"email\" component=\"span\" />\n                </label>\n\n                <label>\n                    Password\n                    <Field type=\"password\" name=\"password\" placeholder=\"Enter your password\" />\n                    <ErrorMessage name=\"password\" component=\"span\" />\n                </label>\n\n                <button type=\"submit\">Sign Up</button>\n            </SignUpFormStyled>\n        </Formik>        \n    )\n}\n\n\nconst values = {    \n    name: \"\",\n    email: \"\",\n    password: \"\",\n}\nconst namePattern = \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst SignUpValidationSchema = Yup.object().shape({\n    name: Yup.string()\n        .matches(namePattern, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n        .min(2, 'Too Short!')\n        .max(70, 'Too Long!')\n        .required('Required'),\n    email: Yup.string().email().required('Required'),\n    password: Yup.string().required('Required'),\n});\n\nexport default SignUp;"],"names":["SignUpFormStyled","styled","Form","values","name","email","password","SignUpValidationSchema","Yup","shape","matches","min","max","required","dispatch","useDispatch","initialValues","onSubmit","resetForm","console","log","register","validationSchema","type","placeholder","component"],"sourceRoot":""}