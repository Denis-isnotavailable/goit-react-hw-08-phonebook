{"version":3,"file":"static/js/971.309765f1.chunk.js","mappings":"0OAmDMA,EAAS,CACXC,MAAO,GACPC,SAAU,IAGRC,EAAyBC,EAAAA,KAAaC,MAAM,CAC9CJ,MAAOG,EAAAA,KAAaH,QAAQK,SAAS,YACrCJ,SAAUE,EAAAA,KAAaE,SAAS,cAIpC,UAjDe,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAgBF,EAAAA,EAAAA,IAAYG,EAAAA,IAQlC,OACI,+BACOJ,IACH,SAAC,KAAD,CAAQK,cAAed,EAAQe,SARlB,SAACf,GAElBO,GAASS,EAAAA,EAAAA,IAAMhB,GAClB,EAK8DiB,iBAAkBd,EAAzE,UACI,UAAC,IAAD,YACI,sCAEI,SAAC,KAAD,CAAOe,KAAK,QAAQC,KAAK,QAAQC,YAAY,sBAC7C,SAAC,KAAD,CAAcD,KAAK,QAAQE,UAAU,aAGzC,yCAEI,SAAC,KAAD,CAAOH,KAAK,WAAWC,KAAK,WAAWC,YAAY,yBACnD,SAAC,KAAD,CAAcD,KAAK,WAAWE,UAAU,aAG5C,oBAAQH,KAAK,SAAb,cAAyBN,GAAgB,SAAC,IAAD,CAAaU,MAAM,UAAUC,OAAQ,MAAS,yCAAvF,aAOnB,C,0FC7CYC,GAAmBC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,w8CAqCZ,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,GAAnB,IAII,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,MAAM,EAAlB,IAGE,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,MAAM,EAAlB,G","sources":["components/SignIn/SignIn.jsx","components/SignUp/SignUp.styled.jsx"],"sourcesContent":["import { Field, Formik, ErrorMessage } from \"formik\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport * as Yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login } from \"redux/auth/operations\";\nimport { selectIsAuthLoading, selectIsRefreshing } from \"redux/auth/selectors\";\n// import { SignInFormStyled } from \"./SignIn.styled\";\n\nimport { SignUpFormStyled } from \"components/SignUp/SignUp.styled\";\n\n\n\n\nconst SignIn = () => {\n    const dispatch = useDispatch();\n    const isRefreshing = useSelector(selectIsRefreshing);    \n    const isAuthLoading = useSelector(selectIsAuthLoading);\n    // const errorAuth = useSelector(selectAuthError);\n    \n    const handleSubmit = (values, ) => {       \n        // console.log(values);\n        dispatch(login(values));        \n    };\n\n    return (\n        <>\n            { !isRefreshing &&\n            <Formik initialValues={values} onSubmit={handleSubmit} validationSchema={SignInValidationSchema}>\n                <SignUpFormStyled>\n                    <label>\n                        Email\n                        <Field type=\"email\" name=\"email\" placeholder=\"Enter your email\" />\n                        <ErrorMessage name=\"email\" component=\"span\" />\n                    </label>\n\n                    <label>\n                        Password\n                        <Field type=\"password\" name=\"password\" placeholder=\"Enter your password\" />\n                        <ErrorMessage name=\"password\" component=\"span\" />\n                    </label>\n\n                    <button type=\"submit\"> { isAuthLoading ? <ScaleLoader color=\"#ffffff\" height={25} /> : <>Log In</> } </button>\n                </SignUpFormStyled>\n            </Formik > }\n        </>\n        \n        \n    );\n};\n\n\nconst values = {\n    email: \"\",\n    password: \"\",\n};\n\nconst SignInValidationSchema = Yup.object().shape({    \n    email: Yup.string().email().required('Required'),\n    password: Yup.string().required('Required'),\n});\n\n\nexport default SignIn;","import styled from \"styled-components\";\nimport { Form } from 'formik';\n\nexport const SignUpFormStyled = styled(Form)`\n\n    padding: 32px;\n    height: 80vh;\n\n    color: #ffffff;\n    background-color: #6a6767;\n    background-image: url(https://cdn-icons-png.flaticon.com/512/2448/2448997.png);\n    background-repeat: no-repeat;\n\n    label {\n        display: block;\n        height: 48px;        \n        padding-bottom: 48px;       \n    }\n\n    input {\n        display: block;\n        margin-top: 8px;\n        \n        padding: 0 16px;\n        width: 250px;\n        height: 24px;        \n        border-radius: 5px;\n        border: 1px solid #bdbdbd;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n        :focus {\n            color: #212529;\n            background-color: #fff;\n            border-color: #bdbdbd;\n            outline: 0;\n            box-shadow: 0 0 0 0.2rem rgba(213, 212, 212, 0.25);\n        }\n    }    \n\n    span {        \n        color: ${p => p.theme.colors.red};\n    }\n\n    button {\n        margin-top: ${p => p.theme.space[4]}px;        \n        width: 150px;\n        height: 50px;\n        border-radius: ${p => p.theme.radii[0]}px;\n        cursor: pointer;\n        margin-left: auto;\n        margin-right: auto;\n        font-size: 24px;\n        color: #ffffff;\n        border: 1px solid #5b5b5e;        \n    \n        background-color: #4f5152;\n\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n        :hover,\n        :focus {\n            background-color: #6b6b71;\n            color: #ffffff;\n        }\n    }\n`;"],"names":["values","email","password","SignInValidationSchema","Yup","shape","required","dispatch","useDispatch","isRefreshing","useSelector","selectIsRefreshing","isAuthLoading","selectIsAuthLoading","initialValues","onSubmit","login","validationSchema","type","name","placeholder","component","color","height","SignUpFormStyled","styled","Form","p","theme","colors","red","space","radii"],"sourceRoot":""}